
### CLI {{{
# open alacritty
# ctrl - return : open -na /Applications/Alacritty.app/ -v
# ctrl - return : alacritty

# restart yabai
# ctrl + cmd - 0: brew services stop yabai && brew services start yabai
ctrl + cmd - 0: yabai --restart-service && skhd --restart-service

# Open regular terminal
# ctrl - return : open -a Terminal ~

# open kitty, the terminal
ctrl - return : /Applications/Kitty.app/Contents/MacOS/kitty --single-instance -d ~

### }}}

# Notes
# ctrl + alt + cmd - return : osascript -e 'tell application "Notes" to tell account "iCloud" to tell folder "Quick" to make new note with properties {name:"TODO Replace", body:"#quick"} show ' 
# -e 'set dateString to do shell script "date +'%Y-%m-%d %k.%M'"' 

### GUI {{{
# Open Doom Emacs
# ctrl + cmd - return : open /Applications/Emacs.app/ 
ctrl + cmd - return : emacs

# TODO fix, find Emacs process kill and restart 
# ctrl + cmd - = : emacsclient -e (kill-emacs)

# Open new Doom Emacs client
ctrl + cmd - space: emacsclient -c
# ctrl + cmd - space: emacsclient -t
# ctrl + cmd + shift - return : emacsclient -c

# Open Dash
# cmd + shift - /: open /Applications/Dash.app/

# Open Discord
# ctrl + cmd - d : open /Applications/Discord.app/
# }}}

# Open Mail
# TODO fix, not working
# ctrl - 0x27: /Applications/Mail.app

# pen ChatGPT
# Use skhd --observe / -o to see hex codes for any key
# Create new area
ctrl - 0x27: osascript -e 'tell application "Safari" to make new document with properties {URL:"https://chat.openai.com/?model=gpt-4"}' 
# ctrl - 0x27: firefox "https://chat.openai.com/?model=gpt-4"

# Opens current tab
# ctrl - 0x27: open -a /Applications/Safari.app "https://chat.openai.com/?model=gpt-4" 

### Browser {{{
# Open irefox
cmd - return: firefox
# open -n /Applications/Firefox.app
# ctrl + cmd - 0x27 : open -n /Applications/Firefox.app
# cmd + shift - return : open -n /Applications/Firefox.app

# Open Safari
# ctrl + shift - return : osascript -e 'tell application "Safari" to make new document' 
#with properties {URL:"https://www.google.com"}' 
#-e 'activate' 
#-e 'tell application "Safari" activate'
#-e 'tell application "System Events" to tell process "Safari" perform action "AXRaise"'
#activate' #-e 'tell application "Safari" activate'
# -e 'tell application "System Events" to tell process "Safari" perform action "AXRaise" of the last window'
# -e 'set index of window 1 to 0'
# https://gist.github.com/stevoyoung/3214626
# shift - return : osascript -e ' tell application "Safari" make new document activate end tell '
# cmd + shift - return : open /Applications/Safari.app/

# Open Music # FIXME not working
# shift - return : open /Applications/Music.app
# cmd + ctrl - 0 : open /Applications/Music.app

# Open New Vivaldi 
# cmd + shift - return : open /Applications/Vivaldi.app/ 

# Open Nearby Browser (Brave)
# shift - return : open -n /Applications/Brave\ Browser.app/ 

# Open New Broser (Brave)
ctrl + shift - return : open /Applications/Google\ Chrome.app/

# Open Nearby Chromium
# shift - return : open /Applications/Chromium.app/
# }}}

### Tools {{{
# ctrl - / : open /Applications/Notes.app/

# }}}

# NOTE(vvkmnn): MacOS screenshot solution
cmd + shift - 4 -> : chunkc border::clear

## Window Manager 
# toggle window zoom
ctrl + cmd - d : yabai -m window --toggle zoom-parent
ctrl + cmd - f : yabai -m window --toggle zoom-fullscreen

# move window to display and follow focus 
cmd + ctrl - j : yabai -m window --display west; yabai -m display --focus west
cmd + ctrl - k : yabai -m window --display east; yabai -m display --focus east

# move window to space and follow focus
shift + cmd - space : cur_window=$(yabai -m query --windows --window | jq '.id') && \
                      yabai -m window --display prev  || yabai -m window --display next && \
                      yabai -m window --focus ${cur_window}

# move window to another display and follow focus
# TODO fancy but doesn't do much
# shift + cmd - left : WIN_ID=$(yabai -m query --windows --window | jq '.id'); yabai -m window --swap west; [[ ! $? == 0 ]] && (yabai -m display --focus west; yabai -m window last --insert east; yabai -m window --focus $WIN_ID; yabai -m window --display prev; yabai -m window --focus $WIN_ID);
# shift + cmd - right : WIN_ID=$(yabai -m query --windows --window | jq '.id'); yabai -m window --swap east; [[ ! $? == 0 ]] && (yabai -m display --focus east; yabai -m window first --insert west; yabai -m window --focus $WIN_ID; yabai -m window --display next; yabai -m window --focus $WIN_ID);


# focus window
# alt - h : yabai -m window --focus west
# alt - j : yabai -m window --focus south
# alt - k : yabai -m window --focus north
# alt - l : yabai -m window --focus east

# focus displays
ctrl - j : yabai -m display --focus west
ctrl - h : yabai -m display --focus east

# move window to pre and next space
# TODO fix this, acts weird
# shift + cmd - j : yabai -m window --space prev; yabai -m space --focus prev
# shift + cmd - j : yabai -m window --space next; yabai -m space --focus next

# swap window
shift + alt - h : yabai -m window --swap west
shift + alt - j : yabai -m window --swap south
shift + alt - k : yabai -m window --swap north
shift + alt - l : yabai -m window --swap east

# move window
shift + cmd - h : yabai -m window --warp west
shift + cmd - j : yabai -m window --warp south
shift + cmd - k : yabai -m window --warp north
shift + cmd - l : yabai -m window --warp east

# balance size of windows
shift + alt - 0 : yabai -m space --balance

# make floating window fill screen
shift + alt - up     : yabai -m window --grid 1:1:0:0:1:1

# make floating window fill left-half of screen
shift + alt - left   : yabai -m window --grid 1:2:0:0:1:1

# make floating window fill right-half of screen
shift + alt - right  : yabai -m window --grid 1:2:1:0:1:1

# create desktop, move window and follow focus
shift + cmd - n : yabai -m space --create && \
                   index="$(yabai -m query --spaces --display | jq 'map(select(."is-native-fullscreen" == false))[-1].index')" && \
                   yabai -m window --space "${index}" && \
                   yabai -m space --focus "${index}"

# create desktop and follow focus
cmd + ctrl - n : yabai -m space --create;\
                id=$(yabai -m query --displays --display | grep "spaces");\
                yabai -m space --focus $(echo ${id:10:${#id}-10})

# destroy desktop
cmd + ctrl - w : yabai -m space --destroy

# fast focus desktop
cmd + ctrl - h : yabai -m space --focus prev
cmd + ctrl - l : yabai -m space --focus next

cmd + alt - x : yabai -m space --focus recent
# cmd + alt - 1 : yabai -m space --focus 1
# cmd + alt - 2 : yabai -m space --focus 2
# cmd + alt - 3 : yabai -m space --focus 3
# cmd + alt - 4 : yabai -m space --focus 4
# cmd + alt - 5 : yabai -m space --focus 5
# cmd + alt - 6 : yabai -m space --focus 6
# cmd + alt - 7 : yabai -m space --focus 7
# cmd + alt - 8 : yabai -m space --focus 8
# cmd + alt - 9 : yabai -m space --focus 9
# cmd + alt - 0 : yabai -m space --focus 10

# send window to desktop and follow focus
# cmd + ctrl - j : yabai -m window --space prev; yabai -m space --focus prev
# cmd + ctrl - k : yabai -m window --space next; yabai -m space --focus next

# shift + cmd - x : yabai -m window --space recent; yabai -m space --focus recent
# cmd - 1 : yabai -m space --focus 1
# cmd - 2 : yabai -m space --focus 2

## focus space 3
# cmd - 3 : index=3; eval "$(yabai -m query --spaces | jq --argjson index "${index}" -r '(.[] | select(.index == $index).windows[0]) as $wid | if $wid then "yabai -m window --focus \"" + ($wid | tostring) + "\"" else "skhd --key \"ctrl - " + (map(select(."native-fullscreen" == 0)) | index(map(select(.index == $index))) + 1 % 10 | tostring) + "\"" end')"

# shift + cmd - 2 : yabai -m window --space  2; yabai -m space --focus 2
# shift + cmd - 3 : yabai -m window --space  3; yabai -m space --focus 3
# shift + cmd - 4 : yabai -m window --space  4; yabai -m space --focus 4
# shift + cmd - 5 : yabai -m window --space  5; yabai -m space --focus 5
# shift + cmd - 6 : yabai -m window --space  6; yabai -m space --focus 6
# shift + cmd - 7 : yabai -m window --space  7; yabai -m space --focus 7
# shift + cmd - 8 : yabai -m window --space  8; yabai -m space --focus 8
# shift + cmd - 9 : yabai -m window --space  9; yabai -m space --focus 9
# shift + cmd - 0 : yabai -m window --space 10; yabai -m space --focus 10

# focus monitor
ctrl + alt - j  : yabai -m display --focus prev
ctrl + alt - k  : yabai -m display --focus next

ctrl + alt - x  : yabai -m display --focus recent
ctrl + alt - 1  : yabai -m display --focus 1
ctrl + alt - 2  : yabai -m display --focus 2
ctrl + alt - 3  : yabai -m display --focus 3

# send window to monitor and follow focus
ctrl + cmd - j  : cur_window=$(yabai -m query --windows --window | jq '.id') && \
                      yabai -m window --display prev  || yabai -m window --display next && \
                      yabai -m window --focus ${cur_window}

ctrl + cmd - j : yabai -m window --display prev; yabai -m display --focus prev
# ctrl + cmd - k  : cur_window=$(yabai -m query --windows --window | jq '.id') && \
#                       yabai -m window --display next || yabai -m window --display prev && \
#                       yabai -m window --focus ${cur_window}
ctrl + cmd - k : yabai -m window --display next; yabai -m display --focus next
#
# ctrl + cmd - k  : cur_window=$(yabai -m query --windows --window | jq '.id') && \
#                       yabai -m window --display next || yabai -m window --display prev && \
#                       yabai -m window --focus ${cur_window}
# ctrl + cmd - k  : yabai -m window --display next; yabai -m display --focus next
# ctrl + alt - h  : yabai -m window --display prev; yabai -m display --focus prev
# ctrl + alt - l  : yabai -m window --display next; yabai -m display --focus next

ctrl + cmd - x  : yabai -m window --display recent; yabai -m display --focus recent
ctrl + cmd - 1  : yabai -m window --display 1; yabai -m display --focus 1
ctrl + cmd - 2  : yabai -m window --display 2; yabai -m display --focus 2
ctrl + cmd - 3  : yabai -m window --display 3; yabai -m display --focus 3

# move window
shift + ctrl - a : yabai -m window --move rel:-20:0
shift + ctrl - s : yabai -m window --move rel:0:20
shift + ctrl - w : yabai -m window --move rel:0:-20
shift + ctrl - d : yabai -m window --move rel:20:0

# increase window size
shift + alt - a : yabai -m window --resize left:-20:0
shift + alt - s : yabai -m window --resize bottom:0:20
shift + alt - w : yabai -m window --resize top:0:-20
shift + alt - d : yabai -m window --resize right:20:0

# decrease window size
shift + cmd - a : yabai -m window --resize left:20:0
shift + cmd - s : yabai -m window --resize bottom:0:-20
shift + cmd - w : yabai -m window --resize top:0:20
shift + cmd - d : yabai -m window --resize right:-20:0

# set insertion point in focused container
ctrl + alt - h : yabai -m window --insert west
ctrl + alt - j : yabai -m window --insert south
ctrl + alt - k : yabai -m window --insert north
ctrl + alt - l : yabai -m window --insert east

# close focused window
ctrl + cmd - e : osascript -e 'tell application "System Events" to perform action "AXPress" of (first button whose subrole is "AXCloseButton") of (first window whose subrole is "AXStandardWindow") of (first process whose frontmost is true)'

# rotate tree
alt - r : yabai -m space --rotate 90

# mirror tree y-axis
alt - y : yabai -m space --mirror y-axis

# mirror tree x-axis
alt - x : yabai -m space --mirror x-axis

# toggle desktop offset
alt - a : yabai -m space --toggle padding; yabai -m space --toggle gap

# toggle window parent zoom
ctrl + shift - d : yabai -m window --toggle zoom-parent

# toggle window fullscreen zoom
# ctrl + cmd - f : yabai -m window --toggle zoom-fullscreen

# toggle window native fullscreen
shift + alt - f : yabai -m window --toggle native-fullscreen

# toggle window border
shift + alt - b : yabai -m window --toggle border

# toggle window split type
alt - e : yabai -m window --toggle split

# float / unfloat window and center on screen
alt - t : yabai -m window --toggle float;\
          yabai -m window --grid 4:4:1:1:2:2

# toggle sticky
alt - s : yabai -m window --toggle sticky

# toggle sticky, float and resize to picture-in-picture size
alt - p : yabai -m window --toggle sticky;\
          yabai -m window --grid 5:5:4:0:1:1

# change layout of desktop
ctrl + alt - a : yabai -m space --layout bsp
ctrl + alt - d : yabai -m space --layout float

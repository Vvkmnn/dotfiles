### tmux

## options
set-option -g default-terminal 'screen-254color'
set-option -g terminal-overrides ',xterm-256color:RGB'

set-window-option -g automatic-rename on # Automatically set window title
set-option -g set-titles on

set -g base-index 1              # start indexing windows at 1 instead of 0
set -g mouse on
set -g detach-on-destroy off     # don't exit from tmux when closing a session
set -g escape-time 0             # zero-out escape time delay
set -g history-limit 10000       # increase history size (from 2,000)
set -g renumber-windows on       # renumber all windows when any window is closed
set -g set-clipboard on          # use system clipboard
set -g status-position top       # macOS / darwin style
set -sg escape-time 0            # no delay for esc
set -g default-terminal "${TERM}"
setw -g mode-keys vi
set -g status-keys vi
# set -g monitor-activity on        # if change show in command line
set -g monitor-activity on        # if change show in command line

set -g pane-active-border-style 'fg=white,bg=default'
set -g pane-border-style 'fg=brightblack,bg=default'


## keybinds
# prefix
# set -g prefix C-Space
# unbind C-b
# bind-key C-Space send-prefix 

# learn defaults
# Prefix-() tab between sessions
# Prefix-S interactive nav between sessions
# Prefix-np next previous windows

bind-key r source-file ~/.config/tmux/tmux.conf # reload

# split
# todo join windows as panes, multiline command
# bind-key v split-window -h; \
# bind-key s split-window -v; \

## conditionals
# if-shell "command -v fzf >/dev/null 2>&1" {
# set -g @fzf-url-fzf-options '-p 60%,30% --prompt="   " --border-label=" Open URL "'
# set -g @fzf-url-history-limit '2000'
# }

# if tpm
if-shell "[ -d $HOME/.tmux/plugins/tpm ]" {
# TPM_PATH="$HOME/.tmux/plugins/tpm"
# if-shell "[ -d '$TPM_PATH' ]" {}

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'    
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'fcsonline/tmux-thumbs'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'wfxr/tmux-fzf-url'
set -g @plugin 'niksingh710/minimal-tmux-status' 
set -g @plugin 'laktak/extrakto'

# minimal tmux
# https://github.com/niksingh710/minimal-tmux-status/
set -g @minimal-tmux-bg "#C0C0C0" #"71797E" # "#FFFFFF" # "698DDA"
# set -g @minimal-tmux-fg "#880808" #"71797E" # "#FFFFFF" # "698DDA"
# set -g @minimal-tmux-bg "#880808" # "698DDA"

set -g @minimal-tmux-justify "left"
set -g @minimal-tmux-indicator-str " -_- "
# set -g @minimal-tmux-indicator-str "[#(TZ="America/New_York" kate +"%%Y-%%m-%%d %%H:%%M")]"
set -g @minimal-tmux-indicator true
set -g @minimal-tmux-status "top"

# Enables or disables the left and right status bar
set -g @minimal-tmux-right true
set -g @minimal-tmux-left true

# expanded icon (fullscreen icon) 
set -g @minimal-tmux-expanded-icon " 󰊓 "

#on all tabs (default is false)
# false will make it visible for the current tab only
set -g @minimal-tmux-show-expanded-icons-for-all-tabs true

# To add or remove extra text in status bar
# set -g @minimal-tmux-status-right-extra "#(curl "wttr.in/Montreal?format=3") "
# set -g @minimal-tmux-status-right-extra "#(curl "wttr.in/?format=3") "
# set -g @minimal-tmux-status-left-extra " #(date '+%A %d-%m-Y %T %Z')"
# set -g @minimal-tmux-status-left-extra " #(date '+%-j/366 %-W/52 %-g/61 %a %b %d-%m-Y %T %Z') "
# set -g @minimal-tmux-status-left-extra " #(date '+D%-j/365 W%-W/52 Y%-g/61 %A %d-%m-Y %T %Z') "
# set -g @minimal-tmux-status-left-extra " #(date "%%Y-%%m-%%d %%H:%%M") "
set -g @minimal-tmux-status-left-extra "#S "

# Not recommended to change these values
# set -g @minimal-tmux-status-right " #(date '+%a %d-%m-%y %T') "
set -g @minimal-tmux-status-right " #(date '+%-j/365 %-g/61 %a %d-%m-%y %T') "
# set -g @minimal-tmux-status-right-extra " #(date '+%-j/365 %-g/61 %a %d-%m-%y %T') "
# set -g @minimal-tmux-status-right " #h "
# set -g @minimal-tmux-status-left "refer to code"
# set -g @minimal-tmux-status-left "[#(TZ="America/New_York" date +"%%Y-%%m-%%d %%H:%%M")]"


# If getting strings cut in left status or right 
# Here k0 is the length of the characters in the string
set -g status-right-length 36
set -g status-left-length 20

run '~/.tmux/plugins/tpm/tpm'
}

## if no tpm
if-shell "[ ! -d $HOME/.tmux/plugins/tpm ]" {
# https://gist.github.com/spicycode/1229612

# 0 is too far from ` ;)
set -g base-index 1

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

#set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 10000

setw -g mode-keys vi

# Enable mouse & Copy/Paste - Requirements: xclip  
set -g mouse on 
# setw -g mode-mouse on

setw -g monitor-activity on
#
# bind-key v split-window -h
# bind-key s split-window -v
#
# bind-key J resize-pane -D 5
# bind-key K resize-pane -U 5
# bind-key H resize-pane -L 5
# bind-key L resize-pane -R 5
#
# bind-key M-j resize-pane -D
# bind-key M-k resize-pane -U
# bind-key M-h resize-pane -L
# bind-key M-l resize-pane -R

# Vim style pane selection
# bind h select-pane -L
# bind j select-pane -D 
# bind k select-pane -U
# bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
# bind -n M-h select-pane -L
# bind -n M-j select-pane -D 
# bind -n M-k select-pane -U
# bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
# bind -n M-Left select-pane -L
# bind -n M-Right select-pane -R
# bind -n M-Up select-pane -U
# bind -n M-Down select-pane -D

# Shift arrow to switch windows
# bind -n S-Left  previous-window
# bind -n S-Right next-window

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.config/tmux/tmux.conf

# THEME
set -g status-bg black
set -g status-fg white
# set -g window-status-current-bg white
# set -g window-status-current-fg black
# set -g window-status-current-attr bold

set -g status-interval 60
set -g status-left-length 30
set -g status-left '#[fg=orange](#S) #(whoami)'
set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'

# set -g status-left '#(curl "wttr.in/?format=3") '

# Shift arrow to switch windows
# bind -n S-Left  previous-window
# bind -n S-Right next-window

# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
# bind -n WheelDownPane select-pane -t= \; send-keys -M
# bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
# bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
# bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
# bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
# bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# # Use vim keybindings in copy mode
# setw -g mode-keys vi

# Update default binding of `Enter` to also use copy-pipe
# unbind -T copy-mode-vi Enter
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection c"
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"


}

# Filetype -------------------
# Plugins to make filetypes in Vim more convenient

# [[plugins]]
# Manual preload via pack/dein/start
# repo = 'sheerun/vim-polyglot' # A solid language pack for Vim.
# lazy = 0
# hook_source = '''
# '''

# [[plugins]]
# repo = 'roxma/python-support.nvim' # use a single command :PythonSupportInit to initialize python support for neovim.
# # on_ft = ['python']
# hook_add = '''
# " PythonSupportInitPython2
# " PythonSupportInitPython3
# '''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = 'python'

[[plugins]]
repo = 'zchee/deoplete-zsh'
on_ft = 'zsh'

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
let g:airline#extensions#ale#enabled = 1

let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '⬥ ok']
let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'

let g:ale_lint_on_save = 1
let g:ale_lint_on_enter = 0
let g:ale_lint_on_text_changed = 0
let g:ale_open_list = 0

let g:ale_set_loclist = 0
let g:ale_set_quickfix = 1

nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)

'''

[[plugins]]
repo = 'autozimu/LanguageClient-neovim' # LSP Integration for Vim
rev = 'next'
build = './install.sh'
on_ft= ['typescript', 'javascript', 'python']
depends = 'deoplete.nvim'
hook_add = '''
let g:LanguageClient_serverCommands = {
    \ 'rust': ['rustup', 'run', 'nightly', 'rls'],
    \ 'javascript': ['javascript-typescript-stdio'],
    \ 'typescript': ['tsserver'],
    \ 'python': ['python-language-server'],
    \ } " Language Server Protocol paths

    '''

